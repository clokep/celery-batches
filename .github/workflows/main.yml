name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: "actions/setup-python@v3"
        with:
          python-version: "3.9"

      - name: "Install dependencies"
        run: python -m pip install -r requirements/pkgutils.txt

      - name: "Run pyupgrade"
        run: pyupgrade --py37-plus **/*.py

      - name: "Run flake8"
        run: flake8

      - name: "Run isort"
        run: isort --check .

      - name: "Run black"
        run: black --check .

      - name: "Run mypy"
        run: mypy

  docs:
    name: "Build Documentation"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: "actions/setup-python@v3"
        with:
          python-version: "3.9"

      - name: "Install dependencies"
        run: |
          python -m pip install -r requirements/docs.txt
          python -m pip install .

      - name: "Run Sphinx"
        run: sphinx-build -W --keep-going -b html docs _build

  tests:
    name: "Python ${{ matrix.python-version }}"
    needs:
      - lint
      - docs
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "pypy-3.10", "pypy-3.11"]

    steps:
      - uses: actions/checkout@v2

      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade "tox<4" "tox-gh-actions<3"

      - name: "Run tox targets for ${{ matrix.python-version }}"
        env:
          TOX_SKIP_ENV: ".*celerymaster.*|.*integration.*"
        run: "python -m tox"

      - name: "Run tox targets for ${{ matrix.python-version }} for celery master"
        env:
          TOX_SKIP_ENV: ".*celery[^m].*|.*integration.*"
        run: "python -m tox"
        continue-on-error: true

  integration-tests:
    name: "Integration tests"
    needs: lint
    runs-on: ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "rabbitmq-diagnostics -q status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5672:5672
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v2

      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.x"

      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade "tox<4" "tox-gh-actions<3"

      - name: "Run tox targets"
        env:
          TOX_SKIP_ENV: ".*unit.*|flake8"
        run: "python -m tox"
